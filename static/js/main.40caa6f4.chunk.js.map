{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","services/images-api.jsx","images/error.jpg","components/ImageError/ImageError.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/ImageInfo/ImageInfo.jsx","App.js","index.js"],"names":["Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","warning","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","srcModal","alt","createPortal","onClick","src","ImageGalleryItem","showModal","toggleModal","ImageGallery","images","map","image","webformatURL","largeImageURL","tags","id","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","ImageError","role","errorImage","width","Button","timer","setTimeout","scrollBy","top","documentElement","scrollHeight","behavior","scroll","App","color","height","ImageInfo","status","onClickLoadMore","prevState","prevProps","prevName","nextName","nextPage","prevPage","imagesAPI","total","hits","catch","error","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.40caa6f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  state = {\n    imageName: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleNameChange = event => {\n    this.setState({ imageName: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.imageName.trim() === '') {\n      toast.warning('Please fill in the search field!');\n      return;\n    }\n    this.props.onSubmit(this.state.imageName);\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    return (\n      <>\n        <header className=\"Searchbar\">\n          <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              value={this.state.imageName}\n              onChange={this.handleNameChange}\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n            />\n          </form>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default Searchbar;\n","import { createPortal } from 'react-dom';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    alt: PropTypes.string.isRequired,\n    srcModal: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    const { srcModal, alt } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={srcModal} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Modal from '../Modal/Modal';\nimport PropTypes from 'prop-types';\n\nexport default class ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    srcModal: PropTypes.string.isRequired,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { src, alt, srcModal } = this.props;\n    const { showModal } = this.state;\n    return (\n      <>\n        <li className=\"ImageGalleryItem\">\n          <img\n            onClick={this.toggleModal}\n            src={src}\n            alt={alt}\n            className=\"ImageGalleryItem-image\"\n          />\n        </li>\n\n        {showModal && (\n          <Modal onClose={this.toggleModal} srcModal={srcModal} alt={alt} />\n        )}\n      </>\n    );\n  }\n}\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nfunction ImageGallery({ images }) {\n  return (\n    <div className=\"ImageGalleryContainer\">\n      <ul className=\"ImageGallery\">\n        {images.map(image => (\n          <ImageGalleryItem\n            key={image.id}\n            src={image.webformatURL}\n            srcModal={image.largeImageURL}\n            alt={image.tags}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\nexport default ImageGallery;\n","const BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '19886282-56444a5241ae61181bc861379';\n\nfunction fetchImages(name, page) {\n  return fetch(\n    `${BASE_URL}/?q=${name}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`There are no ${name} images`));\n  });\n}\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/error.71eb184f.jpg\";","import errorImage from '../../images/error.jpg';\n\nexport default function ImageError() {\n  return (\n    <div role=\"alert\">\n      <img src={errorImage} width=\"800\" alt=\"bad cat\" className=\"ImageError\" />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n  };\n\n  timer = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 700);\n  };\n\n  scroll = () => {\n    this.props.onClick();\n    this.timer();\n  };\n\n  render() {\n    return (\n      <div className=\"BtnContainer\">\n        <button onClick={this.scroll} className=\"Button\" type=\"button\">\n          Load more\n        </button>\n      </div>\n    );\n  }\n}\n\n/* timer = setTimeout(() => {\n  window.scrollBy({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n}, 700);\n\ncomponentDidMount() {\n  scroll = () => {\n    this.props.onClick();\n    this.timer ();\n  };\n}\n\ncomponentWillUnmount() {\n  clearTimeout(this.timer());\n} */\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport React, { Component } from 'react';\n\nexport default class App extends Component {\n  //other logic\n  render() {\n    return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={400} width={200} />;\n  }\n}\n","import React, { Component } from 'react';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport imagesAPI from '../../services/images-api';\nimport ImageError from '../ImageError/ImageError';\nimport Button from '../Button/Button';\nimport Loader from '../Loader/Loader';\nimport PropTypes from 'prop-types';\n\nclass ImageInfo extends Component {\n  state = {\n    images: [],\n    status: 'idle',\n    page: 1,\n  };\n\n  static propTypes = {\n    imageName: PropTypes.string.isRequired,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.imageName;\n    const nextName = this.props.imageName;\n    const nextPage = this.state.page;\n    const prevPage = prevState.page;\n\n    if (prevName !== nextName || prevPage !== nextPage) {\n      this.setState({ status: 'pending' });\n      imagesAPI\n        .fetchImages(nextName, nextPage)\n        .then(images => {\n          if (images.total !== 0) {\n            this.setState(prevState => ({\n              images: [...prevState.images, ...images.hits],\n              status: 'resolved',\n            }));\n          }\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n\n    if (prevName !== nextName) {\n      this.setState({ page: 1, images: [] });\n    }\n  }\n\n  onClickLoadMore = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  render() {\n    const { images, status } = this.state;\n\n    if (status === 'idle') {\n      return (\n        <div className=\"IdleMessage\">Please enter data to search field</div>\n      );\n    }\n\n    if (status === 'pending') {\n      return <Loader />;\n    }\n    if (status === 'rejected') {\n      return <ImageError />;\n    }\n    if (images.total === 0) {\n      return (\n        <div>\n          Image was not found. Please, change your request and try again.\n        </div>\n      );\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ImageGallery images={images} />\n          <Button onClick={this.onClickLoadMore} page={this.state.page} />\n        </>\n      );\n    }\n  }\n}\n\nexport default ImageInfo;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageInfo from './components/ImageInfo/ImageInfo';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageInfo imageName={this.state.imageName} />\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}