{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","services/images-api.jsx","images/error.jpg","components/ImageError/ImageError.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/ImageInfo/ImageInfo.jsx","App.js","index.js"],"names":["Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","warning","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","srcModal","alt","createPortal","onClick","src","ImageGalleryItem","showModal","toggleModal","ImageGallery","images","map","image","webformatURL","largeImageURL","tags","id","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","ImageError","role","errorImage","width","Button","timer","setTimeout","scrollBy","top","documentElement","scrollHeight","behavior","scroll","App","color","height","ImageInfo","status","onClickLoadMore","prevState","prevProps","prevName","nextName","nextPage","prevPage","imagesAPI","total","hits","catch","error","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.160b742d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    imageName: '',\r\n  };\r\n\r\n  static propTypes ={\r\n    onSubmit: PropTypes.func.isRequired,\r\n  }\r\n\r\n  handleNameChange = event => {\r\n    this.setState({ imageName: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.imageName.trim() === '') {\r\n      toast.warning('Please fill in the search field!');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.imageName);\r\n    this.setState({ imageName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <header className=\"Searchbar\">\r\n          <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n              value={this.state.imageName}\r\n              onChange={this.handleNameChange}\r\n              className=\"SearchForm-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n            />\r\n          </form>\r\n        </header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import { createPortal } from 'react-dom';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n\r\nexport default class Modal extends Component {\r\n\r\n  static propTypes ={\r\n    onClose: PropTypes.func.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    srcModal: PropTypes.string.isRequired,\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n      if (e.code === 'Escape') {\r\n        this.props.onClose();\r\n      }\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n  window.removeEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n  render() {\r\n    const {srcModal, alt} = this.props;\r\n  return createPortal (\r\n    <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={srcModal} alt={alt} />\r\n      </div>\r\n    </div>, modalRoot,\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  state = {\r\n    showModal: false,\r\n  }\r\n\r\n  static propTypes ={\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    srcModal: PropTypes.string.isRequired,\r\n  }\r\n\r\n  toggleModal =() => {\r\n    this.setState(({showModal}) => ({showModal: !showModal,}));\r\n  };\r\n\r\n  render() {\r\n    const {src, alt, srcModal} = this.props;\r\n    const {showModal} =this.state;\r\n    return (\r\n      <>\r\n    <li className=\"ImageGalleryItem\">\r\n      <img onClick={this.toggleModal} src={src} alt={alt} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n\r\n    {showModal && <Modal onClose={this.toggleModal} srcModal={srcModal} alt={alt}/>}\r\n    </>\r\n    )\r\n  }\r\n}\r\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction ImageGallery({ images }) {\r\n  return (\r\n    <div className=\"ImageGalleryContainer\">\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          src={image.webformatURL}\r\n          srcModal={image.largeImageURL}\r\n          alt={image.tags}\r\n        />\r\n      ))}\r\n    </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes ={\r\n  images: PropTypes.array.isRequired,\r\n}\r\nexport default ImageGallery;\r\n","const BASE_URL = 'https://pixabay.com/api';\r\nconst API_KEY = '19886282-56444a5241ae61181bc861379';\r\n\r\nfunction fetchImages(name, page) {\r\n  return fetch(\r\n    `${BASE_URL}/?q=${name}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`There are no ${name} images`));\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchImages,\r\n};\r\n\r\nexport default api;\r\n","export default __webpack_public_path__ + \"static/media/error.71eb184f.jpg\";","import errorImage from '../../images/error.jpg';\r\n\r\n\r\nexport default function ImageError() {\r\n  return (\r\n    <div role=\"alert\" >\r\n      <img src={errorImage} width=\"800\" alt=\"bad cat\" className=\"ImageError\"/>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\n\r\nexport default class Button extends Component {\r\n  static propTypes ={\r\n    onClick: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n  }\r\n\r\n  timer = () => { setTimeout(() => {\r\n    window.scrollBy({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }, 700);\r\n  }\r\n  \r\n    scroll = () => {\r\n      this.props.onClick();\r\n      this.timer();\r\n    };\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"BtnContainer\">\r\n      <button onClick={this.scroll} className=\"Button\" type=\"button\">\r\n        Load more\r\n      </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/* timer = setTimeout(() => {\r\n  window.scrollBy({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  });\r\n}, 700);\r\n\r\ncomponentDidMount() {\r\n  scroll = () => {\r\n    this.props.onClick();\r\n    this.timer ();\r\n  };\r\n}\r\n\r\ncomponentWillUnmount() {\r\n  clearTimeout(this.timer());\r\n} */\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class App extends Component {\r\n  //other logic\r\n  render() {\r\n    return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={400} width={200} />;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport imagesAPI from '../../services/images-api';\r\nimport ImageError from '../ImageError/ImageError';\r\nimport Button from '../Button/Button';\r\nimport Loader from '../Loader/Loader';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ImageInfo extends Component {\r\n  state = {\r\n    images: [],\r\n    status: 'idle',\r\n    page: 1,\r\n  };\r\n\r\n  static propTypes ={\r\n    imageName: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.imageName;\r\n    const nextName = this.props.imageName;\r\n    const nextPage = this.state.page;\r\n    const prevPage = prevState.page;\r\n\r\n    if (prevName !== nextName || prevPage !== nextPage) {\r\n      this.setState({ status: 'pending' });\r\n      imagesAPI\r\n        .fetchImages(nextName, nextPage)\r\n        .then(images => {\r\n          if (images.total !== 0) {\r\n            this.setState(prevState => ({\r\n              images: [...prevState.images, ...images.hits],\r\n              status: 'resolved',\r\n            }));\r\n          }\r\n        })\r\n        .catch(error => this.setState({ error, status: 'rejected' }));\r\n    }\r\n\r\n    if (prevName !== nextName) {\r\n      this.setState({ page: 1, images: [] });\r\n    }\r\n  }\r\n\r\n  onClickLoadMore = () => {\r\n    this.setState(prevState => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { images, status } = this.state;\r\n\r\n    if (status === 'idle') {\r\n      return <div className=\"IdleMessage\">Please enter data to search field</div>;\r\n    }\r\n\r\n    if (status === 'pending') {\r\n      return <Loader />;\r\n    }\r\n    if (status === 'rejected') {\r\n      return <ImageError />;\r\n    }\r\n    if (images.total === 0) {\r\n      return (\r\n        <div>\r\n          Image was not found. Please, change your request and try again.\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ImageGallery images={images} />\r\n          <Button onClick={this.onClickLoadMore} page={this.state.page} />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageInfo;\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageInfo from './components/ImageInfo/ImageInfo';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageInfo imageName={this.state.imageName} />\n        <ToastContainer autoClose={3000}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}